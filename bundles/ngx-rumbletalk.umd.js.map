{"version":3,"file":"ngx-rumbletalk.umd.js.map","sources":["ng://ngx-rumbletalk/lib/ngx-rumbletalk.service.ts","ng://ngx-rumbletalk/lib/ngx-rumbletalk.component.ts","ng://ngx-rumbletalk/lib/ngx-rumbletalk.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxRumbletalkService {\n  constructor(private http: HttpClient) {}\n\n  address(hash: string): Observable<string> {\n    return this.http\n      .get<string>(`https://www.rumbletalk.com/client/service.php?hash=${hash}`)\n      .pipe(map(data => data['address']));\n  }\n\n  reload(url: string): Observable<any> {\n    return this.http.get<any>(url);\n  }\n}\n","import {\n  Component,\n  OnInit,\n  OnDestroy,\n  Input,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\nimport { NgxRumbletalkService } from './ngx-rumbletalk.service';\n\nconst protocol = 'https://';\nconst baseWebUrl = 'https://www.rumbletalk.com/';\nconst serviceRelativeUrl = 'client/service.php?hash=';\nlet server: string;\nlet messageInterval: any;\nlet floatingToggleInterval: any;\n\n@Component({\n  selector: 'ngx-rumbletalk',\n  templateUrl: './ngx-rumbletalk.component.html',\n  styleUrls: ['./ngx-rumbletalk.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxRumbletalkComponent implements OnInit, OnDestroy {\n  /** @const Object different embedding types */\n  readonly EMBED_TYPES = {\n    EMBEDDED: 0,\n    FLOATING: 1,\n    MOBILE_FULL: 2\n  };\n  readonly counterTop = 14;\n  readonly counterLeft = 23;\n\n  @ViewChild('iframe') iframeElement: ElementRef;\n  @ViewChild('chatDiv') chatDivElement: ElementRef;\n  @Input() public hash: string;\n  @Input() public side: number;\n  @Input() public embedType: number;\n  @Input() public cdn: string;\n  @Input() public floating: boolean;\n  @Input() public width: number;\n  @Input() public height: number;\n  @Input() public bounce: number;\n  @Input() public image: string;\n  @Input() public showDetails: boolean;\n\n  mobile: boolean;\n\n  constructor(private service: NgxRumbletalkService) {}\n\n  ngOnInit() {\n    const ua = navigator.userAgent.toUpperCase();\n    this.mobile =\n      ua.indexOf('MOBILE') !== -1 || ua.indexOf('ANDROID') !== -1 || ua.indexOf('IOS') !== -1;\n\n    /* if web and embed type 2, treat as embedded (0) */\n    if (!this.mobile && this.embedType === this.EMBED_TYPES.MOBILE_FULL) {\n      this.embedType = this.EMBED_TYPES.EMBEDDED;\n    }\n\n    this.service.address(this.hash).subscribe(address => {\n      server = address;\n\n      if (!this.mobile) {\n        this.iframeElement.nativeElement.src = `https://${address}/${this.hash}/`;\n      }\n\n      this.addListeners();\n      this.instantiateQuery();\n    });\n  }\n\n  ngOnDestroy() {\n    clearInterval(messageInterval);\n  }\n\n  /**\n   * add the event listeners based on the embed type and device\n   */\n  addListeners(): void {\n    window.addEventListener('message', this.info.bind(this), false);\n  }\n\n  /**\n   * handles postMessage requests\n   * @param event - the event object\n   */\n  info(event) {\n    if (isFinite(event.data)) {\n      clearInterval(messageInterval);\n    } else if (typeof event.data === 'object') {\n      if (event.data.reload) {\n        this.reload();\n      }\n    }\n  }\n\n  /**\n   * reloads the iframe (or parent page) in case of a server request\n   */\n  reload() {\n    const url = `${baseWebUrl}${serviceRelativeUrl}${this.hash}`;\n\n    this.service.reload(url).subscribe(\n      res => {\n        if (res.status) {\n          server = res.address;\n          const address = `${protocol}${server}/${this.hash}/`;\n\n          if (this.iframeElement.nativeElement instanceof HTMLIFrameElement) {\n            this.iframeElement.nativeElement.src = address;\n          } else {\n            this.iframeElement.nativeElement.location.href = address;\n          }\n\n          this.instantiateQuery();\n        }\n      },\n      ignore => location.reload()\n    );\n  }\n\n  /**\n   * starts [repeatedly] trying to connect to the chat using postMessage\n   */\n  instantiateQuery() {\n    messageInterval = setInterval(this.query.bind(this), 1000);\n  }\n\n  /**\n   * instantiate a postMessage connection with the chat\n   */\n  query() {\n    try {\n      let target;\n      let origin;\n\n      if (this.iframeElement.nativeElement instanceof HTMLIFrameElement) {\n        target = this.iframeElement.nativeElement.contentWindow;\n        origin = protocol + server;\n      } else {\n        target = this.iframeElement.nativeElement;\n        origin = baseWebUrl;\n      }\n\n      target.postMessage('toolbar', origin);\n    } catch (ignore) {}\n  }\n\n  /**\n   * checks if the given origin is of a chat service\n   * @param origin - the URL of the origin\n   * returns boolean\n   */\n  validateOrigin(origin): boolean {\n    return /^https:\\/\\/.+\\.rumbletalk\\.(net|com)(:4433)?$/.test(origin);\n  }\n\n  handleImageLoad(event: any): void {\n    /* image element */\n    const target = event.target;\n    /* parent div */\n    const parent = event.currentTarget.parentNode;\n\n    /* match the dimensions of the image and the wrapping div */\n    parent.style.height = `${target.height}px`;\n    parent.style.width = `${target.width}px`;\n\n    /* place the chat div right above the image */\n    if (!this.mobile) {\n      this.chatDivElement.nativeElement.style.bottom = `${target.height}px`;\n    }\n  }\n\n  /**\n   * hides or shows the floating chat\n   * @param boolean [close] - if set to true, will force hide\n   */\n  toggleFloatingChatStart(close: boolean = false): void {\n    clearInterval(floatingToggleInterval);\n    let steps = -100;\n\n    if (this.chatDivElement.nativeElement.style.visibility === 'hidden' && !close) {\n      steps *= -1;\n      this.chatDivElement.nativeElement.style.width = 0;\n      this.chatDivElement.nativeElement.style.height = 0;\n      this.chatDivElement.nativeElement.style.overflow = 'visible';\n      this.chatDivElement.nativeElement.style.visibility = 'visible';\n    }\n\n    floatingToggleInterval = setInterval(() => {\n      this.toggleFloatingChat(steps);\n    }, 1);\n  }\n\n  /**\n   * hide or display the floating chat by @steps\n   * @param number steps - the number of pixels to increment the display by\n   */\n  toggleFloatingChat(steps): void {\n    const chatDiv = this.chatDivElement.nativeElement;\n    let width = chatDiv.offsetWidth + steps;\n    let height = chatDiv.offsetHeight + steps;\n    let check = 0;\n\n    if (width < 0) {\n      width = 0;\n    }\n\n    if (height < 0) {\n      height = 0;\n    }\n\n    if (width >= 0 && height >= 0) {\n      if (width <= this.width) {\n        check = 1;\n      } else {\n        width = this.width;\n      }\n\n      if (height <= this.height) {\n        check = 1;\n      } else {\n        height = this.height;\n      }\n\n      chatDiv.style.width = width + 'px';\n      chatDiv.style.height = height + 'px';\n    }\n\n    if (!check || width <= 0 || height <= 0) {\n      clearInterval(floatingToggleInterval);\n      if (width < this.width) {\n        chatDiv.style.visibility = 'hidden';\n        chatDiv.style.overflow = 'hidden';\n      }\n    }\n  }\n\n  /**\n   * attaches the open chat event to the given target\n   * @param Element target\n   */\n  openChat(): void {\n    const link = `${baseWebUrl}client/chat.php?${this.hash}`;\n    let iframeInterval;\n    const iframe = this.iframeElement;\n\n    if (iframe) {\n      iframe.nativeElement.focus();\n    } else {\n      const tempIframe = window.open(link);\n      iframeInterval = setInterval(() => {\n        if (tempIframe.closed) {\n          clearInterval(iframeInterval);\n        }\n      }, 100);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxRumbletalkComponent } from './ngx-rumbletalk.component';\nimport { BrowserModule } from '@angular/platform-browser';\n\n@NgModule({\n  declarations: [NgxRumbletalkComponent],\n  imports: [HttpClientModule, BrowserModule],\n  exports: [NgxRumbletalkComponent]\n})\nexport class NgxRumbletalkModule {}\n"],"names":["map","Injectable","HttpClient","Component","ChangeDetectionStrategy","ViewChild","Input","NgModule","HttpClientModule","BrowserModule"],"mappings":"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"}
